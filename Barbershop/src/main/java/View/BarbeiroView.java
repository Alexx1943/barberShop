/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.AgendamentoController;
import Controller.BarbeiroController;
import DAO.AgendamentoDAO;
import DAO.Conexao;
import Model.Agendamento;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class BarbeiroView extends javax.swing.JFrame {

    /**
     * Creates new form Barbeiro
     */
    public BarbeiroView() {
        initComponents();
        configurarTabela(); // método que você cria para configurar o modelo da JTable
        atualizarTabela(); // opcional, já carrega dados ao abrir
    }
    
        private void configurarTabela() {
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"ID", "Cliente", "Serviço", "Valor", "Data", "Hora", "Observação"},
            0 // zero linhas
        );
        tabelaAgendamento.setModel(model);
    }
        
        public void atualizarTabela() {
    try {
        AgendamentoDAO agendamentoDAO = new AgendamentoDAO(new Conexao().getConeConnection());
        List<Agendamento> agendamentos = agendamentoDAO.listarTodos();

        DefaultTableModel model = (DefaultTableModel) tabelaAgendamento.getModel();
        model.setRowCount(0); // limpa as linhas atuais

        for (Agendamento ag : agendamentos) {
            model.addRow(new Object[]{
                ag.getId(),
                ag.getCliente().getNome(),
                ag.getServico().getDescricao(),
                ag.getValor(),
                ag.getData(),
                ag.getHora(),
                ag.getObservacao()
            });
        }
        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro a o carregar agendamentos: " + e.getMessage());
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAgendamento = new javax.swing.JTable();
        Agendar = new javax.swing.JButton();
        atualizarBotao = new javax.swing.JButton();
        deletarBotao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaAgendamento.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        tabelaAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Serviço", "Valor", "Data", "Hora", "Observação"
            }
        ));
        jScrollPane1.setViewportView(tabelaAgendamento);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 1190, 500));

        Agendar.setText("Agendar");
        Agendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgendarActionPerformed(evt);
            }
        });
        getContentPane().add(Agendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 130, 50));

        atualizarBotao.setText("Atualizar");
        atualizarBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarBotaoActionPerformed(evt);
            }
        });
        getContentPane().add(atualizarBotao, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, 130, 50));

        deletarBotao.setText("Deletar");
        deletarBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletarBotaoActionPerformed(evt);
            }
        });
        getContentPane().add(deletarBotao, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 530, 130, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon("/home/usuario/Projeto/NetBeansProjects/Barbershop/src/main/java/View/Imagens/fundo-MenuPrincipal.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void atualizarBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarBotaoActionPerformed
        atualizarTabela();
        JOptionPane.showMessageDialog(null, "Tabela autualizada");
    }//GEN-LAST:event_atualizarBotaoActionPerformed

    private void AgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgendarActionPerformed
        AgendamentoView agendamento = new AgendamentoView();
        agendamento.setVisible(true);
    }//GEN-LAST:event_AgendarActionPerformed

    private void deletarBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletarBotaoActionPerformed
         int linhaSelecionada = tabelaAgendamento.getSelectedRow();
         if (linhaSelecionada != -1) {
         int id = (int) tabelaAgendamento.getValueAt(linhaSelecionada, 0); // coluna 0 é o ID
        try {
            AgendamentoDAO dao = new AgendamentoDAO(new Conexao().getConeConnection());
            BarbeiroController controller = new BarbeiroController(dao);
            controller.deletar(id);
            atualizarTabela();
            JOptionPane.showMessageDialog(this, "Agendamento deletado com sucesso!");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao deletar agendamento: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecione um agendamento na tabela para deletar.");
     }
    }//GEN-LAST:event_deletarBotaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarbeiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarbeiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarbeiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarbeiroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BarbeiroView().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agendar;
    private javax.swing.JButton atualizarBotao;
    private javax.swing.JButton deletarBotao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaAgendamento;
    // End of variables declaration//GEN-END:variables
}
